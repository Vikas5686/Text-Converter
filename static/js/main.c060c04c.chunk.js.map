{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","a","about","onClick","toggle","role","htmlFor","Textform","useState","text","setText","style","color","for","onChange","event","target","value","backgroundColor","rows","showAlert","set","toUpperCase","low","toLowerCase","b","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","length","Alert","alert","msg","App","setmode","setAlert","massage","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c060c04c.chunk.js","sourcesContent":["import React  from 'react'\r\n\r\n\r\nexport default function Navbar(props){\r\n  \r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a a className=\"nav-link\" href=\"/about\">{props.about}</a>\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggle} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\"  >{props.mode==='light'?'EnableDarkMode':'EnableLightMode'}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n// Navbar.propTypes = {\r\n//   title: PropTypes.string.isRequired,\r\n//   about: PropTypes.string\r\n// }\r\n\r\n\r\n// Navbar.defaultProps = {\r\n//   title: 'set title is here',\r\n//   about: 'about text is here'\r\n// }\r\n","// import React from 'react'\r\nimport React,{useState} from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n    const handleUpClick=()=>{\r\n        props.showAlert('Convert to Upper Case','Success')\r\n        let set=text.toUpperCase()\r\n    setText(set)\r\n}\r\n\r\nconst handleOnChange=(event)=>{\r\n    setText(event.target.value)\r\n}\r\n\r\nconst handleToLo=()=>{\r\n    let low=text.toLowerCase()\r\n    props.showAlert('Convert To Lower Case','Success')\r\n    setText(low)\r\n}\r\n\r\nconst click=()=>{\r\n    let b ='This is Made By Vikas Sharma'\r\n    setText(b)\r\n}\r\n\r\nconst mode=()=>{\r\n    \r\n}\r\n\r\nconst copytext=()=>{\r\n    var a=document.getElementById('copytext')\r\n    let b=a.select()\r\n    navigator.clipboard.writeText(b)\r\n}\r\n\r\nconst handleExtraSpaces=()=>{\r\n    let newText=text.split(/[ ]+/)\r\n    props.showAlert('Remove Extra Spaces','Success')\r\n    setText(newText.join(\" \"))\r\n}\r\n\r\n\r\n    const[text,setText]=useState('')\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}} >\r\n                \r\n                <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Enter Your Text Here</label>\r\n                <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" onChange={handleOnChange}  style={{backgroundColor:props.mode==='light'?'white':'#001430',color:props.mode==='dark'?'white':'black'}} value={text} rows=\"9\"></textarea>\r\n            </div>\r\n            <div className=\"container\">\r\n            <button className=\"btn btn-primary mx-1my-3\" id='button' onClick={handleUpClick}>ConverToUpperCase</button>\r\n            <button className=\"btn btn-primary mx-1 my-3\" onClick={handleToLo}>ConvertToLowerCase</button>\r\n            <button className=\"btn btn-primary mx-1 my-3\" onClick={click}>Click-Here</button>\r\n            <button className=\"btn btn-primary mx-1 my-3\" onClick={mode}>Enable-Dark-Mode</button>\r\n            <button className=\"btn btn-primary mx-1 my-3\" id='copytext' onClick={copytext}>Copy</button>\r\n            <button className=\"btn btn-primary mx-1 my-3\" id='copytext' onClick={handleExtraSpaces}>RemoveExtraSpaces</button>\r\n            </div>\r\n\r\n                 <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n            <h3>Your Summary</h3>\r\n            <p>{text.split(\" \").length-'1'} words and {text.length} character</p>\r\n            <p>{0.008*text.split(\" \").length} Minutes to Read</p>\r\n            <h1>Preview</h1>\r\n            <p>{text}</p>\r\n        </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    return (\r\n    props.alert &&\r\n    <div>\r\n            <div className=\"alert alert-success\" role=\"alert\">\r\n               <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import About from './components/About';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react'\n\n\n\n// import logo from './logo.svg';\n// import './App.css';\n\nfunction App() {\n\n  //   let style={\n  //     color:'white',\n  //     backgroundColor:'black'\n  // }\n\n  const [mode, setmode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  let showAlert = (massage, type) => {\n    setAlert({\n      msg: massage,\n      type: type\n    })\n  }\n\n  const toggle = () => {\n    if (mode === 'light') {\n      setmode('dark')\n      document.body.style.backgroundColor = '#001430'\n      showAlert('Dark Mode is Enable', 'Success')\n      document.title = \"TextConverter-DarkMode\"\n    }\n\n    else {\n      setmode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert('light Mode is Enable', 'Success')\n      document.title = \"TextConverter-LightMode\"\n\n    }\n  }\n\n\n\n  return (\n    <>\n      \n        \n          <Navbar title=\"TextConverter\" about=\"AboutUs\" mode={mode} toggle={toggle} />\n          <Alert alert={alert} />\n          <div className=\"container my-3\">\n       \n        \n              <Textform mode={mode} showAlert={showAlert} />\n            \n          </div>\n        \n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}